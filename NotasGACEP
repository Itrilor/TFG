Objetivo -> Modificar el AG para que funcione bien con pocas iteraciones

Crear otro archivo -> GACEP (Genetic Algorithm for Combinatory Expensive Problem)

Ejecuciones media -> 90000 -> Queremos reducirlo a 450-500

5s -> 25ms
30s -> 150ms

Cosas que hacer:
  Formato TacoLab de los resultados (https://tacolab.org/comp)
  Cambiamos el criterio de parada como ejecuciones
  Comprobamos que dan resultados parecidos
  Convergencia para ver cómo mejora por tiempo (Histórico)
  Reducimos a 450 y comprobamos cómo empeora
    Mandar los resultados al profesor
  Opciones para modificar GACEP (tener en cuenta el histórico):
    - Guardar todas las soluciones que se evalúan en un archivo -> Identificamos qué objetos se eligen más en el 10% mejor y en el 10% peor -> Calculamos porcentajes de aparición de objetos y creamos un vector de ponderación. Calculamos esto durante las primeras 50 iteraciones y a partir de eso modificar la mutación -> Si aparecen mucho en el mejor y en el peor (o no aparecen en ninguno), las ignoramos porque no determinan nada. 
    - Resetear el vector cada x iteraciones (Guardamos info en 50 iteraciones, los utilizamos durante otras 50 y los reseteamos)
    - Para el operador de reparación, también se tienen en cuenta el vector anterior.
   Realizamos una comparativa con combinaciones de las modificaciones
    
Olvidamos el Greedy porque no nos interesa
GRASP: Greedy aleatorio -> En vez de quedarte con el mejor valor/peso, eliges los x primeros y eliges uno.
